spring.main.allow-circular-references=true
spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

#################### Implementation Environment ####################

rgt.implementation.environment=QA
rgt.server.context=https://dev.ratnaglobaltech.com/
rgt.role.feature=true
#################### Implementation Environment End ####################

# Local App config
server.port=8080
spring.application.name=ROOT
server.servlet.context-path=/

#######Local###############
spring.datasource.url=jdbc:mysql://localhost:3306/rgt?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.jdbcUrl=${spring.datasource.url}
spring.datasource.username=root
spring.datasource.password=Manager
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.generate_statistics=false

#maximum number of milliseconds that a client will wait for a connection
spring.datasource.hikari.connection-timeout = 300000
#minimum number of idle connections maintained by HikariCP in a connection pool
spring.datasource.hikari.minimum-idle= 3 
 #maximum pool size
spring.datasource.hikari.maximum-pool-size= 10
 #maximum idle time for connection
spring.datasource.hikari.idle-timeout=30000
# maximum lifetime in milliseconds of a connection in the pool after it is closed.
spring.datasource.hikari.max-lifetime= 1000 
#default auto-commit behavior.
spring.datasource.hikari.auto-commit =true 

entitymanager.packagesToScan=com.letmecall.rgt.entity

##Spring boot error#
server.error.whitelabel.enabled=false
server.error.path=/error

## logger
logging.file.path = /www/log/rgt
logging.file.name = /www/log/rgt/rgt.log
logging.level.root = WARN
logging.level.org.springframework=info
logging.level.org.hibernate=info
logging.level.com.zaxxer.hikari=info
logging.level.com.letmecall.rgt=debug

logging.pattern.console=%-5p|%date{ISO8601}|%X{RgtMDCFilter.UUID}|%logger{0}|%m%ex%n
logging.pattern.file=%-5p|%d{ISO8601}{GMT}|%X{RgtMDCFilter.UUID}|%c{1}|%m%ex%n


##Jwt Token
#@comment secret key is being to used to create jjwt token 
#@public 
#@private 
# @comment user token issuer
com.letmecall.nextdoor.rest.user.token.issuer=RGT

#@comment user token expire time in number of day 
com.letmecall.nextdoor.token.expiry.days=10 

#@comment user token expire time in number of day where given value will be  multiplied by 1 day i.e. 24 hours
#1000 * 60 * 60 * 24
com.letmecall.nextdoor.token.expiry.time.millis=86400000 



#### Email related properties #####
spring.mail.host=smtp.office365.com
spring.mail.port=587
spring.mail.username=noreply@ratnaglobaltech.com
spring.mail.password=Welcome@LMC#123
notification.mail.fromAddress=noreply@ratnaglobaltech.com
notification.mail.bcc=subba.reddy@ratnaglobaltech.com
notification.mail.fromAddress.displayName=Ratna Global Technologies
admin.email_lst=subba.reddy@ratnaglobaltech.com
#admin.email_lst=subba.reddy@ratnaglobaltech.com,pritamkumar.gurumayum@ratnaglobaltech.com,contact@ratnaglobaltech.com

# Other properties
spring.mail.properties.mail.smtp.ssl.trust=smtp.office365.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=9000
spring.mail.properties.mail.smtp.timeout=9000
spring.mail.properties.mail.smtp.writetimeout=9000

# TLS , port 587
spring.mail.properties.mail.smtp.starttls.enable=true



spring.velocity.resourceLoaderPath=classpath:/templates/vm/
spring.velocity.prefix=
spring.velocity.suffix=.vm
spring.velocity.cache=false
spring.velocity.check-template-location=true
spring.velocity.content-type=text/html
spring.velocity.charset=UTF-8
spring.velocity.properties.input.encoding=UTF-8
spring.velocity.properties.output.encoding=UTF-8


################## OTP generation ##################################
# Time based OTP (RFC 6238)
otp.algorithm.salt=12345678
otp.token.digits.generated=6
otp.login.expire.minutes=30
otp.number.prefix=RGT
admin.default.time.zone=America/Los_Angeles
##forgotpassword#
customer.notification.forgotpassword.otp.email.subject= One Time Password (OTP) for your Letmecall Account
notification.forgotpassword.otp.text={otpNumber} is your OTP to your RGT Account.it is valid for {min} minutes.please do not share this with anyone.
##changepassword#
customer.notification.changepassword.otp.email.subject= One Time Password (OTP) for your Letmecall Account
notification.changepassword.otp.text={otpNumber} is your OTP to your RGT Account.it is valid for {min} minutes.please do not share this with anyone.

email.template.logo.image=/images/template/logo.png

##loginotp#
customer.notification.login.otp.email.subject= One Time Password (OTP) for your Ratna Global Technologies Account
notification.login.otp.text={otpNumber} is your OTP to your RGT Account.it is valid for {min} minutes.please do not share this with anyone.

##InviteMember#
invite.email.background.image=/images/template/invitationmail.png
customer.notification.invitemember.email.subject= Welcome Community!
invite.member.url=/register

#######App.OAuth#########
app.auth.tokenSecret=926D96C90030DD58429D2751AC1BDBBC
app.auth.tokenExpirationMsec=864000000
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the frontend client in the /oauth2/authorization request.
    # We're not using cookies because they won't work well in mobile clients.
app.oauth2.authorizedRedirectUris=http://localhost:8081/oauth2/redirect

#######OAuth#########
spring.security.oauth2.client.registration.google.clientId=322480174811-r3rn2gecni362bjldihhv7r27tj4m910.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.clientSecret=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
spring.security.oauth2.client.registration.google.scope=email, profile
spring.security.oauth2.client.registration.facebook.clientId=3028140744141204
spring.security.oauth2.client.registration.facebook.clientSecret=1901b28c768d8deaf0df5d1c9825f9e8
spring.security.oauth2.client.registration.facebook.scope=email, public_profile

#######azure#########
# Specifies your Active Directory ID:
azure.activedirectory.tenant-id=50ca17fe-21ef-4693-bc7e-6ac0ac57c88b
# Specifies your App Registration's Application ID:
spring.security.oauth2.client.registration.azure.client-id=0d84fe86-9010-4b02-a583-787bca780b53
# Specifies your App Registration's secret key:
spring.security.oauth2.client.registration.azure.client-secret=F0T7Q~~2N39jqYhqwxXHCIOL8QBM3oMK2MhkD
spring.security.oauth2.client.registration.azure.scope=openid,profile
#spring.security.oauth2.client.registration.azure.scope=openid,profile,"https://management.core.windows.net/user_impersonation"
#azure.activedirectory.user-group.allowed-groups=Admin
azure.activedirectory.session-stateless=true

#####################spring-boot-metrics#########################
#spring.application.name=spring-boot-metrics-application-books-service
management.endpoints.web.exposure.include=health,prometheus,metrics

management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoints.web.base-path=/actuator
management.metrics.export.prometheus.enabled=true

# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator.metrics.customizing.common-tags
# common tags
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=local

# histogram & percentiles - "_bucket" prefix in the metric name
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Tomcat metrics
server.tomcat.mbeanregistry.enabled=true


################Zoho############################





